{
  "address": "0x9fb5f3Ea897363Fa2F7dC3c7117c6098e01cF00F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x05581944fdeea5398868ad95eafd967d7e29756163a3c6772e88d75a0d1d2c6b",
  "receipt": {
    "to": null,
    "from": "0x440B5346d748Ce45c282e8087b1cEe546a3722dD",
    "contractAddress": "0x9fb5f3Ea897363Fa2F7dC3c7117c6098e01cF00F",
    "transactionIndex": 199,
    "gasUsed": "853659",
    "logsBloom": "0x
    "blockHash": "0xf5d5799ff83de867d8ccd4b79f76dfabc0b8c118cc38a61e5205ebd0d7c04e62",
    "transactionHash": "0x05581944fdeea5398868ad95eafd967d7e29756163a3c6772e88d75a0d1d2c6b",
    "logs": [],
    "blockNumber": 8221351,
    "cumulativeGasUsed": "26386529",
    "status": 1,
    "byzantium": true
  },
  "args": ["0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"],
  "numDeployments": 1,
  "solcInputHash": "ae593a9df2c39b2807f72b15a37ade55",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    uint256 public constant MINIMUM_USD = 10 * 1e18;\\r\\n\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n\\r\\n    address public immutable i_owner;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) {\\r\\n            revert FundMe__NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\r\\n            \\\"Didn't send enough!\\\"\\r\\n        );\\r\\n\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        for (uint256 i = 0; i < funders.length; i++) {\\r\\n            addressToAmountFunded[funders[i]] = 0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"call failed\\\");\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0b006be1b1d2ec85571295619e6d56bc4f4f8dd8479f9316e9098f929bb5ca71\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\"; // yarn add --dev @chainlink/contracts\\r\\n\\r\\n// when using chainlink, you cant use hardhat or local network or JVM. because the contract address giving priceFeed only exists on testnet/mainnets\\r\\n\\r\\n// how to use chainlink locally?\\r\\n// ------with MOCKS\\r\\n\\r\\n//DONT hardcode priceFeed address + the address changes depending on the chain\\r\\n// ------use constructor args\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        // price = 8 decimals\\r\\n        return uint256(price * 1e10); // price * 10**10\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethAmount * ethPrice) / 1e18; // (18 dec * 18 dec) / 18 dec = 18 dec\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0e1fd7f81faafd2af13fae1fd553460ffa30cb2dd8d543efa795288ab36556ab\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f75380380610f7583398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e10610165600039600081816102d301526105570152610e106000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c6919061079e565b61050b565b6040516100d891906107e4565b60405180910390f35b3480156100ed57600080fd5b506100f6610523565b60405161010391906107e4565b60405180910390f35b34801561011857600080fd5b5061012161052f565b60405161012e919061085e565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610555565b6040516101639190610888565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108cf565b610579565b6040516101a09190610888565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b890919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610959565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103fb5760006001600080848154811061037f5761037e610979565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103f3906109d7565b915050610359565b50600067ffffffffffffffff81111561041757610416610a20565b5b6040519080825280602002602001820160405280156104455781602001602082028036833780820191505090505b506000908051906020019061045b929190610694565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048290610a80565b60006040518083038185875af1925050503d80600081146104bf576040519150601f19603f3d011682016040523d82523d6000602084013e6104c4565b606091505b5050905080610508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ff90610ae1565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b678ac7230489e8000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c4836105f4565b90506000670de0b6b3a764000082866105dd9190610b01565b6105e79190610b8a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063d57600080fd5b505afa158015610651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106759190610c48565b5050509150506402540be4008161068c9190610cc3565b915050919050565b82805482825590600052602060002090810192821561070d579160200282015b8281111561070c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b4565b5b50905061071a919061071e565b5090565b5b8082111561073757600081600090555060010161071f565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076b82610740565b9050919050565b61077b81610760565b811461078657600080fd5b50565b60008135905061079881610772565b92915050565b6000602082840312156107b4576107b361073b565b5b60006107c284828501610789565b91505092915050565b6000819050919050565b6107de816107cb565b82525050565b60006020820190506107f960008301846107d5565b92915050565b6000819050919050565b600061082461081f61081a84610740565b6107ff565b610740565b9050919050565b600061083682610809565b9050919050565b60006108488261082b565b9050919050565b6108588161083d565b82525050565b6000602082019050610873600083018461084f565b92915050565b61088281610760565b82525050565b600060208201905061089d6000830184610879565b92915050565b6108ac816107cb565b81146108b757600080fd5b50565b6000813590506108c9816108a3565b92915050565b6000602082840312156108e5576108e461073b565b5b60006108f3848285016108ba565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b60006109436013836108fc565b915061094e8261090d565b602082019050919050565b6000602082019050818103600083015261097281610936565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e2826107cb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1557610a146109a8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a6a600083610a4f565b9150610a7582610a5a565b600082019050919050565b6000610a8b82610a5d565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610acb600b836108fc565b9150610ad682610a95565b602082019050919050565b60006020820190508181036000830152610afa81610abe565b9050919050565b6000610b0c826107cb565b9150610b17836107cb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5057610b4f6109a8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b95826107cb565b9150610ba0836107cb565b925082610bb057610baf610b5b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bda81610bbb565b8114610be557600080fd5b50565b600081519050610bf781610bd1565b92915050565b6000819050919050565b610c1081610bfd565b8114610c1b57600080fd5b50565b600081519050610c2d81610c07565b92915050565b600081519050610c42816108a3565b92915050565b600080600080600060a08688031215610c6457610c6361073b565b5b6000610c7288828901610be8565b9550506020610c8388828901610c1e565b9450506040610c9488828901610c33565b9350506060610ca588828901610c33565b9250506080610cb688828901610be8565b9150509295509295909350565b6000610cce82610bfd565b9150610cd983610bfd565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1857610d176109a8565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5557610d546109a8565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9257610d916109a8565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dcf57610dce6109a8565b5b82820290509291505056fea26469706673582212203d837720a8e0432dc746dab7f385677e0fe1e81ce49fcbc3c37667f20af6720f64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c6919061079e565b61050b565b6040516100d891906107e4565b60405180910390f35b3480156100ed57600080fd5b506100f6610523565b60405161010391906107e4565b60405180910390f35b34801561011857600080fd5b5061012161052f565b60405161012e919061085e565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610555565b6040516101639190610888565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108cf565b610579565b6040516101a09190610888565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b890919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610959565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103fb5760006001600080848154811061037f5761037e610979565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103f3906109d7565b915050610359565b50600067ffffffffffffffff81111561041757610416610a20565b5b6040519080825280602002602001820160405280156104455781602001602082028036833780820191505090505b506000908051906020019061045b929190610694565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048290610a80565b60006040518083038185875af1925050503d80600081146104bf576040519150601f19603f3d011682016040523d82523d6000602084013e6104c4565b606091505b5050905080610508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ff90610ae1565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b678ac7230489e8000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c4836105f4565b90506000670de0b6b3a764000082866105dd9190610b01565b6105e79190610b8a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063d57600080fd5b505afa158015610651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106759190610c48565b5050509150506402540be4008161068c9190610cc3565b915050919050565b82805482825590600052602060002090810192821561070d579160200282015b8281111561070c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b4565b5b50905061071a919061071e565b5090565b5b8082111561073757600081600090555060010161071f565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076b82610740565b9050919050565b61077b81610760565b811461078657600080fd5b50565b60008135905061079881610772565b92915050565b6000602082840312156107b4576107b361073b565b5b60006107c284828501610789565b91505092915050565b6000819050919050565b6107de816107cb565b82525050565b60006020820190506107f960008301846107d5565b92915050565b6000819050919050565b600061082461081f61081a84610740565b6107ff565b610740565b9050919050565b600061083682610809565b9050919050565b60006108488261082b565b9050919050565b6108588161083d565b82525050565b6000602082019050610873600083018461084f565b92915050565b61088281610760565b82525050565b600060208201905061089d6000830184610879565b92915050565b6108ac816107cb565b81146108b757600080fd5b50565b6000813590506108c9816108a3565b92915050565b6000602082840312156108e5576108e461073b565b5b60006108f3848285016108ba565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b60006109436013836108fc565b915061094e8261090d565b602082019050919050565b6000602082019050818103600083015261097281610936565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e2826107cb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1557610a146109a8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a6a600083610a4f565b9150610a7582610a5a565b600082019050919050565b6000610a8b82610a5d565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610acb600b836108fc565b9150610ad682610a95565b602082019050919050565b60006020820190508181036000830152610afa81610abe565b9050919050565b6000610b0c826107cb565b9150610b17836107cb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5057610b4f6109a8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b95826107cb565b9150610ba0836107cb565b925082610bb057610baf610b5b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bda81610bbb565b8114610be557600080fd5b50565b600081519050610bf781610bd1565b92915050565b6000819050919050565b610c1081610bfd565b8114610c1b57600080fd5b50565b600081519050610c2d81610c07565b92915050565b600081519050610c42816108a3565b92915050565b600080600080600060a08688031215610c6457610c6361073b565b5b6000610c7288828901610be8565b9550506020610c8388828901610c1e565b9450506040610c9488828901610c33565b9350506060610ca588828901610c33565b9250506080610cb688828901610be8565b9150509295509295909350565b6000610cce82610bfd565b9150610cd983610bfd565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1857610d176109a8565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5557610d546109a8565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9257610d916109a8565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dcf57610dce6109a8565b5b82820290509291505056fea26469706673582212203d837720a8e0432dc746dab7f385677e0fe1e81ce49fcbc3c37667f20af6720f64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
